# vim: ft=bash

alias list='ls -g --human-readable --no-group --almost-all --classify --time-style=long-iso --color' ;
alias list2='ls -g --human-readable --no-group --classify --time-style=long-iso --color' ;
alias ll='ls -l --human-readable --almost-all --classify --time-style=long-iso --color' ;

# Old shortcuts from yum
alias dnfs='sudo dnf search' ;
alias dnfi='sudo dnf install' ;
alias dnfu='sudo dnf update' ;
alias dnfe='sudo dnf erase' ;
alias yums='sudo dnf search' ;
alias yumi='sudo dnf install' ;
alias yumu='sudo dnf update' ;
alias yume='sudo dnf erase' ;

if [[ -d "$HOME/.dotfiles" ]]; then
	DOTFILES_DIR="$HOME/.dotfiles" 
	# Alias editing these files.
	# Get current dotfile list.
	source "$DOTFILES_DIR/stow-sources"
	DOTFILES=()
	for x in "${STOW_SOURCES[@]}"; do
		find "$DOTFILES_DIR/$x" -type f | while read -r f; do
			DOTFILES+=("$f")
		done
	done
	if [[ -f ~/.aliases_local ]]; then DOTFILES+=("$HOME/.aliases_local"); fi
	if [[ -f ~/.bashrc_local ]]; then DOTFILES+=("$HOME/.bashrc_local"); fi
	if [[ -f ~/.zshrc_local ]]; then DOTFILES+=("$HOME/.zshrc_local"); fi
	CONFIGFILES=(
		stow-sources
	)
	for CONFIG in "${CONFIGFILES[@]}"; do
		DOTFILES+=("$DOTFILES_DIR/$CONFIG")
	done
	# Only gonna work if you've installed in ~/.dotfiles
	alias editrcs="vim +'set autochdir' ${DOTFILES[*]}"
fi

# General aliases.
alias lssz='du -sh *' ;
alias tmat='tmux attach' ;
alias df='df -h' ;
alias wttr='curl --compressed "wttr.in/Charlotte?F&q"' ;
alias rsync='rsync --archive --info=progress2 --human-readable --stats --partial' ;

# Git aliases.
alias g='git'
alias ga='git add'
alias gst='git status'
alias gsts='git status --branch --short'
alias gd='git diff --ignore-all-space --diff-filter=adr --color-words'
alias gco='git checkout'
alias gb='git branch'
alias gc='git commit -v'
alias gl='git pull'
alias gp='git push'
alias gm='git merge --no-ff'
alias gmff='git merge --ff-only'
alias gf='git fetch -v'
alias gt='git tag'
alias gwt='git worktree'
alias gbl='git blame -w'
alias gcp='git cherry-pick'
alias glastmerge='git log --merges -n1 --format=%h'
alias vimg='vim -c ":G|only"'

if command -v highlight >/dev/null 2>&1; then
	alias cats='highlight -O ansi --force'
fi

# Random functions
function mkcd () {
	mkdir -p "$1"
	cd "$1" || return 1
	return 0
}
function cdmk () {
	mkcd "$1"
}

function vimhelp () {
	vim -c "help $1 | only"
}
function vimman () {
	vim -c "Man $1 | only"
}
alias vimh='vimhelp'
alias vimm='vimman'

function toyaml () {
	if ! command -v ruby >/dev/null 2>&1; then
		echo 'You need Ruby to run this function.'
		return 1
	fi

	if [[ $# -gt 0 ]]; then
		if [[ ! -f $1 ]]; then
			echo 'That file does not exist to parse.'
			return 1
		else
			ruby -ryaml -rjson -e "puts YAML.dump(JSON.parse(File.read(\"$1\")))"
		fi
	else
		ruby -ryaml -rjson -e 'puts YAML.dump(JSON.parse($<.read))'
	fi
}

function tojson () {
	if ! command -v ruby >/dev/null 2>&1; then
		echo 'You need Ruby to run this function.'
		return 1
	fi

	if [[ $# -gt 0 ]]; then
		if [[ ! -f $1 ]]; then
			echo 'That file does not exist to parse.'
			return 1
		else
			ruby -ryaml -rjson -e "puts JSON.pretty_generate(YAML.safe_load(File.read(\"$1\")))"
		fi
	else
		ruby -ryaml -rjson -e 'puts JSON.pretty_generate(YAML.safe_load($<.read))'
	fi
}

function timer () {
	sleep "$1"
	print -n '\a'
}
function alert () {
	timer 0s
}

function vman () {
	nvim -c "Man $1|only"
}
