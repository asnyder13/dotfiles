# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $term alacritty
set $files thunar

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi \
    -terminal '$term' \
    -location 2

# Shows a combined list of the applications with desktop files and
# executables from PATH.
set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg /usr/share/backgrounds/default.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration, likely overwritten by distro (eg: the sway spin of Fedora (90-swayidle.conf))
# set $lock_timeout 900
# set $screen_timeout 1200
# # exec_always killall -q swayidle
# exec LT="$lock_timeout" ST="$screen_timeout" LT=${LT:-300} ST=${ST:-60} &&           \
#     swayidle -w                                                                             \
#         timeout $LT 'swaylock -f'                                                           \
#         timeout $((LT + ST)) 'swaymsg "output * power off"'                                 \
#                       resume 'swaymsg "output * power on"'                                  \
#         timeout $ST 'pgrep -xu "$USER" swaylock >/dev/null && swaymsg "output * power off"' \
#              resume 'pgrep -xu "$USER" swaylock >/dev/null && swaymsg "output * power on"'  \
#         before-sleep 'swaylock -f'                                                          \
#         lock 'swaylock -f'                                                                  \
#         unlock 'pkill -xu "$USER" -SIGUSR1 swaylock'

### Logout/shutdown hotkeys
mode "$mode_system" {
    bindsym {
        l exec $HOME/.config/sway/swayexit.sh lock, mode "default"
        e exec $HOME/.config/sway/swayexit.sh logout, mode "default"
        Shift+r exec $HOME/.config/sway/swayexit.sh reboot, mode "default"
        Shift+s exec $HOME/.config/sway/swayexit.sh shutdown, mode "default"

        # back to normal: Enter or Escape
        Return mode "default"
        Escape mode "default"
    }
}
bindsym $mod+F12 mode "$mode_system"
focus_follows_mouse no
mouse_warping none
seat * hide_cursor when-typing enable

xwayland enable
font pango:SauceCodeProNerdFont 10
exec wlsunset \
    -l 35.3 -L -80.9 \
    -T 4500

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+e exec $files

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Switch audio output
bindsym Shift+F11 exec $HOME/.config/sway/switch-sink.sh

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

### Moving around:
# Move your focus around
bindsym {
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # Move the focused window with the same, but add Shift
    $mod+Shift+$left move left 50 px
    $mod+Shift+$down move down 50 px
    $mod+Shift+$up move up 50 px
    $mod+Shift+$right move right 50 px
    $mod+Shift+Alt+$left move left
    $mod+Shift+Alt+$down move down
    $mod+Shift+Alt+$up move up
    $mod+Shift+Alt+$right move right
    # Ditto, with arrow keys
    $mod+Shift+Left move left 50 px
    $mod+Shift+Down move down 50 px
    $mod+Shift+Up move up 50 px
    $mod+Shift+Right move right 50 px
    $mod+Shift+Alt+Left move left
    $mod+Shift+Alt+Down move down
    $mod+Shift+Alt+Up move up
    $mod+Shift+Alt+Right move right
}

### Workspaces:
set {
    $ws1   number 1
    $ws2   number 2
    $ws3   number 3
    $ws4   number 4
    $ws5   number 5
    $ws6   number 6
    $ws7   number 7
    $ws8   number 8
    $ws9   number 9
    $ws10  number 10
    $wsF1  number 11
    $wsF2  number 12
    $wsF3  number 13
    $wsF4  number 14
    $wsF5  number 15
    $wsF6  number 16
    $wsF7  number 17
    $wsF8  number 18
    $wsF9  number 19
    $wsF10 number 20
}
# Switch to workspace
bindsym {
    $mod+BackSpace workspace back_and_forth

    $mod+1   workspace $ws1
    $mod+2   workspace $ws2
    $mod+3   workspace $ws3
    $mod+4   workspace $ws4
    $mod+5   workspace $ws5
    $mod+6   workspace $ws6
    $mod+7   workspace $ws7
    $mod+8   workspace $ws8
    $mod+9   workspace $ws9
    $mod+0   workspace $ws10
    $mod+F1  workspace $wsF1
    $mod+F2  workspace $wsF2
    $mod+F3  workspace $wsF3
    $mod+F4  workspace $wsF4
    $mod+F5  workspace $wsF5
    $mod+F6  workspace $wsF6
    $mod+F7  workspace $wsF7
    $mod+F8  workspace $wsF8
    $mod+F9  workspace $wsF9
    $mod+F10 workspace $wsF10
    # Move focused container to workspace
    $mod+Shift+1   move container to workspace $ws1
    $mod+Shift+2   move container to workspace $ws2
    $mod+Shift+3   move container to workspace $ws3
    $mod+Shift+4   move container to workspace $ws4
    $mod+Shift+5   move container to workspace $ws5
    $mod+Shift+6   move container to workspace $ws6
    $mod+Shift+7   move container to workspace $ws7
    $mod+Shift+8   move container to workspace $ws8
    $mod+Shift+9   move container to workspace $ws9
    $mod+Shift+0   move container to workspace $ws10
    $mod+Shift+F1  move container to workspace $wsF1
    $mod+Shift+F2  move container to workspace $wsF2
    $mod+Shift+F3  move container to workspace $wsF3
    $mod+Shift+F4  move container to workspace $wsF4
    $mod+Shift+F5  move container to workspace $wsF5
    $mod+Shift+F6  move container to workspace $wsF6
    $mod+Shift+F7  move container to workspace $wsF7
    $mod+Shift+F8  move container to workspace $wsF8
    $mod+Shift+F9  move container to workspace $wsF9
    $mod+Shift+F10 move container to workspace $wsF10
}
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+x splitv
bindsym $mod+v splith

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
bindsym $mod+z focus child

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode
    bindsym {
        $left  resize shrink width 50 px or 10 ppt
        $down  resize grow height 50 px or 10 ppt
        $up    resize shrink height 50 px or 10 ppt
        $right resize grow width 50 px or 10 ppt

        Left resize shrink width 50 px or 10 ppt
        Down resize grow height 50 px or 10 ppt
        Up resize shrink height 50 px or 10 ppt
        Right resize grow width 50 px or 10 ppt

        Shift+$left  resize shrink width 2 px or 2 ppt
        Shift+$down  resize grow height 2 px or 2 ppt
        Shift+$up    resize shrink height 2 px or 2 ppt
        Shift+$right resize grow width 2 px or 2 ppt

        Shift+Left resize shrink width 2 px or 2 ppt
        Shift+Down resize grow height 2 px or 2 ppt
        Shift+Up resize shrink height 2 px or 2 ppt
        Shift+Right resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape or $mod+r
        Return mode "default"
        Escape mode "default"
        $mod+r mode "default"
        Ctrl+BracketLeft mode "default"
    }
}
bindsym $mod+r mode "resize"

client.focused #4c7899 #285577 #ffffff #2e9ef4 #994c78

default_border normal 3
default_floating_border none
smart_borders on

gaps inner 2
gaps outer 2
smart_gaps on
hide_edge_borders smart

for_window [title="."] title_format "(%app_id) <b>%title</b>"
for_window [shell="xwayland"] title_format "[XWayland] (%app_id) <b>%title</b>"

include floaties.conf

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'

### Configs that need to override system defaults.

# Need to have `playerctrld daemon` running to detect when Spotify got played.
bindsym --no-warn {
    XF86AudioPause exec playerctl play-pause
    XF86AudioPlay exec playerctl play-pause
    XF86AudioNext exec playerctl next
    XF86AudioPrev exec playerctl previous
}

# The image files will be written to XDG_SCREENSHOTS_DIR if this is set
# or defined in user-dirs.dir, or to a fallback location XDG_PICTURES_DIR.
bindsym --no-warn {
    # Select and capture a custom rectangular area
    Print       exec grimshot --notify save area
    # Capture the currently active window
    Alt+Print   exec grimshot --notify save active
    # Capture the currently active output
    Ctrl+Print  exec grimshot --notify save output
}
