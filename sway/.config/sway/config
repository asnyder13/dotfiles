# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $term foot

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# Recommends: rofi-wayland
set $rofi_cmd rofi \
    -terminal '$term' \
    -location 2

# Shows a combined list of the applications with desktop files and
# executables from PATH.
set $menu $rofi_cmd -show combi -combi-modes drun#run -modes combi

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# Requires: desktop-backgrounds-compat, swaybg
output * bg /usr/share/backgrounds/default.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
     timeout 600 'swaylock -f -c 3d3d3d' \
     timeout 1200 'swaymsg "output * power off"' \
        resume 'swaymsg "output * power on"' \
     before-sleep 'swaylock -f -c 3d3d3'

### Logout/shutdown hotkeys
mode "$mode_system" {
    bindsym l exec $HOME/.config/sway/swayexit.sh lock, mode "default"
    bindsym e exec $HOME/.config/sway/swayexit.sh logout, mode "default"
    bindsym Shift+r exec $HOME/.config/sway/swayexit.sh reboot, mode "default"
    bindsym Shift+s exec $HOME/.config/sway/swayexit.sh shutdown, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+F12 mode "$mode_system"
focus_follows_mouse no

xwayland enable
font pango:SauceCodeProNerdFont 10
exec wlsunset \
    -l 35.3 -L -80.9 \
    -T 4500

### Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload

### Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

### Workspaces:
set $ws1   number 1
set $ws2   number 2
set $ws3   number 3
set $ws4   number 4
set $ws5   number 5
set $ws6   number 6
set $ws7   number 7
set $ws8   number 8
set $ws9   number 9
set $ws10  number 10
set $wsF1  number 11
set $wsF2  number 12
set $wsF3  number 13
set $wsF4  number 14
set $wsF5  number 15
set $wsF6  number 16
set $wsF7  number 17
set $wsF8  number 18
set $wsF9  number 19
set $wsF10 number 20
# Switch to workspace
bindsym $mod+1   workspace $ws1
bindsym $mod+2   workspace $ws2
bindsym $mod+3   workspace $ws3
bindsym $mod+4   workspace $ws4
bindsym $mod+5   workspace $ws5
bindsym $mod+6   workspace $ws6
bindsym $mod+7   workspace $ws7
bindsym $mod+8   workspace $ws8
bindsym $mod+9   workspace $ws9
bindsym $mod+0   workspace $ws10
bindsym $mod+F1  workspace $wsF1
bindsym $mod+F2  workspace $wsF2
bindsym $mod+F3  workspace $wsF3
bindsym $mod+F4  workspace $wsF4
bindsym $mod+F5  workspace $wsF5
bindsym $mod+F6  workspace $wsF6
bindsym $mod+F7  workspace $wsF7
bindsym $mod+F8  workspace $wsF8
bindsym $mod+F9  workspace $wsF9
bindsym $mod+F10 workspace $wsF10
# Move focused container to workspace
bindsym $mod+Shift+1   move container to workspace $ws1
bindsym $mod+Shift+2   move container to workspace $ws2
bindsym $mod+Shift+3   move container to workspace $ws3
bindsym $mod+Shift+4   move container to workspace $ws4
bindsym $mod+Shift+5   move container to workspace $ws5
bindsym $mod+Shift+6   move container to workspace $ws6
bindsym $mod+Shift+7   move container to workspace $ws7
bindsym $mod+Shift+8   move container to workspace $ws8
bindsym $mod+Shift+9   move container to workspace $ws9
bindsym $mod+Shift+0   move container to workspace $ws10
bindsym $mod+Shift+F1  move container to workspace $wsF1
bindsym $mod+Shift+F2  move container to workspace $wsF2
bindsym $mod+Shift+F3  move container to workspace $wsF3
bindsym $mod+Shift+F4  move container to workspace $wsF4
bindsym $mod+Shift+F5  move container to workspace $wsF5
bindsym $mod+Shift+F6  move container to workspace $wsF6
bindsym $mod+Shift+F7  move container to workspace $wsF7
bindsym $mod+Shift+F8  move container to workspace $wsF8
bindsym $mod+Shift+F9  move container to workspace $wsF9
bindsym $mod+Shift+F10 move container to workspace $wsF10
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+x splitv
bindsym $mod+v splith

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
bindsym $mod+z focus child

# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode
    bindsym $left  resize shrink width 50 px or 10 ppt
    bindsym $down  resize grow height 50 px or 10 ppt
    bindsym $up    resize shrink height 50 px or 10 ppt
    bindsym $right resize grow width 50 px or 10 ppt

    bindsym Left resize shrink width 50 px or 10 ppt
    bindsym Down resize grow height 50 px or 10 ppt
    bindsym Up resize shrink height 50 px or 10 ppt
    bindsym Right resize grow width 50 px or 10 ppt

    bindsym Shift+$left  resize shrink width 2 px or 2 ppt
    bindsym Shift+$down  resize grow height 2 px or 2 ppt
    bindsym Shift+$up    resize shrink height 2 px or 2 ppt
    bindsym Shift+$right resize grow width 2 px or 2 ppt

    bindsym Shift+Left resize shrink width 2 px or 2 ppt
    bindsym Shift+Down resize grow height 2 px or 2 ppt
    bindsym Shift+Up resize shrink height 2 px or 2 ppt
    bindsym Shift+Right resize grow width 2 px or 2 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

client.focused #4c7899 #285577 #ffffff #2e9ef4 #994c78

default_border normal 3
default_floating_border none
smart_borders on

gaps inner 2
gaps outer 2
smart_gaps on
hide_edge_borders smart

for_window [title="."] title_format "(%app_id) <b>%title</b>"
for_window [shell="xwayland"] title_format "[XWayland] (%app_id) <b>%title</b>"

include floaties.conf

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'

### Configs that need to override system defaults.
bindsym --locked --no-warn {
    XF86AudioPause exec playerctl -p "$($HOME/.config/sway/is-spotify.sh)" play-pause
    XF86AudioPlay exec playerctl -p "$($HOME/.config/sway/is-spotify.sh)" play-pause
    XF86AudioNext exec playerctl -p "$($HOME/.config/sway/is-spotify.sh)" next
    XF86AudioPrev exec playerctl -p "$($HOME/.config/sway/is-spotify.sh)" previous
}
